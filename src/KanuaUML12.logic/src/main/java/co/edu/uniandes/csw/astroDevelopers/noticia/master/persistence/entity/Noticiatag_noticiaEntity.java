/* ========================================================================
 * Copyright 2014 astroDevelopers
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 astroDevelopers

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.astroDevelopers.noticia.master.persistence.entity;

import co.edu.uniandes.csw.astroDevelopers.tag.persistence.entity.TagEntity;
import co.edu.uniandes.csw.astroDevelopers.noticia.persistence.entity.NoticiaEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(Noticiatag_noticiaEntityId.class)
@NamedQueries({
    @NamedQuery(name = "Noticiatag_noticiaEntity.getByMasterId", query = "SELECT  u FROM Noticiatag_noticiaEntity u WHERE u.noticiaId=:noticiaId"),
    @NamedQuery(name = "Noticiatag_noticiaEntity.deleteNoticiatag_noticiaEntity", query = "DELETE FROM Noticiatag_noticiaEntity u WHERE u.noticiaId=:noticiaId and  u.tag_noticiaId=:tag_noticiaId")
})
public class Noticiatag_noticiaEntity implements Serializable {

    @Id
    @Column(name = "noticiaId")
    private Long noticiaId;
    @Id
    @Column(name = "tag_noticiaId")
    private Long tag_noticiaId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "noticiaId", referencedColumnName = "id")
    @JoinFetch
    private TagEntity noticiaIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "tag_noticiaId", referencedColumnName = "id")
    @JoinFetch
    private TagEntity tag_noticiaIdEntity; 

    public Noticiatag_noticiaEntity() {
    }

    public Noticiatag_noticiaEntity(Long noticiaId, Long tag_noticiaId) {
        this.noticiaId =noticiaId;
        this.tag_noticiaId = tag_noticiaId;
    }

    public Long getNoticiaId() {
        return noticiaId;
    }

    public void setNoticiaId(Long noticiaId) {
        this.noticiaId = noticiaId;
    }

    public Long getTag_noticiaId() {
        return tag_noticiaId;
    }

    public void setTag_noticiaId(Long tag_noticiaId) {
        this.tag_noticiaId = tag_noticiaId;
    }

    public TagEntity getNoticiaIdEntity() {
        return noticiaIdEntity;
    }

    public void setNoticiaIdEntity(TagEntity noticiaIdEntity) {
        this.noticiaIdEntity = noticiaIdEntity;
    }

    public TagEntity getTag_noticiaIdEntity() {
        return tag_noticiaIdEntity;
    }

    public void setTag_noticiaIdEntity(TagEntity tag_noticiaIdEntity) {
        this.tag_noticiaIdEntity = tag_noticiaIdEntity;
    }

}
