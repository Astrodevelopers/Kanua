 
/* ========================================================================
 * Copyright 2014 astroDevelopers
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 astroDevelopers

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.astroDevelopers.proyecto.master.logic.ejb;

import co.edu.uniandes.csw.astroDevelopers.proyecto.master.logic.api.IProyectoMasterLogicService;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.enterprise.inject.Default;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

@Default
@Stateless
@LocalBean
public class ProyectoMasterLogicService extends _ProyectoMasterLogicService implements IProyectoMasterLogicService {

    public String buscarProyectosPorTag(String tag){
        return proyectoMasterPersistance.buscarProyectosPorTag(tag);
    }
    
    public String procesarContacto(String name, String email, String text, String id_equipo) {
        try {
            String form = "From: " + name + ".";
            form += '\n' + "Text: " + text + ".";
            form += '\n' + "Email: " + email + ".";
            sendTemplateEmail(form, id_equipo);
            return "SUCCESS";
        } catch (Exception e) {
            return "FAIL";
        }
    }
        
    public boolean realizarSolicitud(String name, String lname, String email, String link, String rol, 
            String comment, String id) {
        boolean ans = false;
        return ans;
    }
    
    public boolean sendTemplateEmail(String text, String id_equipo) throws Exception {
        
        text = text.replaceAll("_", " ");
        
        
        Properties props = new Properties();
        // Nombre del host de correo, es smtp.gmail.com
        props.setProperty("mail.smtp.host", "smtp.gmail.com");
        // TLS si est√° disponible
        props.setProperty("mail.smtp.starttls.enable", "true");
        // Puerto de gmail para envio de correos
        props.setProperty("mail.smtp.port","587");
        // Nombre del usuario
        props.setProperty("mail.smtp.user", "astrodevelopers14@gmail.com");
        // Si requiere o no usuario y password para conectarse.
        props.setProperty("mail.smtp.auth", "true");
        Session session = Session.getDefaultInstance(props);
        session.setDebug(true);
        MimeMessage message = new MimeMessage(session);
        // Quien envia el correo
        message.setFrom(new InternetAddress("astrodevelopers14@gmail.com"));
        
        // A quien va dirigido 
        
        message.addRecipient(Message.RecipientType.TO, new InternetAddress("sc.valencia606@uniandes.edu.co"));
        
        message.setSubject("Contacto Kanua");
        message.setText(text);
        Transport t = session.getTransport("smtp");
        t.connect("astrodevelopers14@gmail.com","Astrodevelopers2014");
        t.sendMessage(message,message.getAllRecipients());
        t.close();
        
        return true;
   
}
}