/* ========================================================================
 * Copyright 2014 astroDevelopers
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 astroDevelopers

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.astroDevelopers.charla.master.persistence.entity;

import co.edu.uniandes.csw.astroDevelopers.tag.persistence.entity.TagEntity;
import co.edu.uniandes.csw.astroDevelopers.charla.persistence.entity.CharlaEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(Charlatag_charlaEntityId.class)
@NamedQueries({
    @NamedQuery(name = "Charlatag_charlaEntity.getByMasterId", query = "SELECT  u FROM Charlatag_charlaEntity u WHERE u.charlaId=:charlaId"),
    @NamedQuery(name = "Charlatag_charlaEntity.deleteCharlatag_charlaEntity", query = "DELETE FROM Charlatag_charlaEntity u WHERE u.charlaId=:charlaId and  u.tag_charlaId=:tag_charlaId")
})
public class Charlatag_charlaEntity implements Serializable {

    @Id
    @Column(name = "charlaId")
    private Long charlaId;
    @Id
    @Column(name = "tag_charlaId")
    private Long tag_charlaId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "charlaId", referencedColumnName = "id")
    @JoinFetch
    private TagEntity charlaIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "tag_charlaId", referencedColumnName = "id")
    @JoinFetch
    private TagEntity tag_charlaIdEntity; 

    public Charlatag_charlaEntity() {
    }

    public Charlatag_charlaEntity(Long charlaId, Long tag_charlaId) {
        this.charlaId =charlaId;
        this.tag_charlaId = tag_charlaId;
    }

    public Long getCharlaId() {
        return charlaId;
    }

    public void setCharlaId(Long charlaId) {
        this.charlaId = charlaId;
    }

    public Long getTag_charlaId() {
        return tag_charlaId;
    }

    public void setTag_charlaId(Long tag_charlaId) {
        this.tag_charlaId = tag_charlaId;
    }

    public TagEntity getCharlaIdEntity() {
        return charlaIdEntity;
    }

    public void setCharlaIdEntity(TagEntity charlaIdEntity) {
        this.charlaIdEntity = charlaIdEntity;
    }

    public TagEntity getTag_charlaIdEntity() {
        return tag_charlaIdEntity;
    }

    public void setTag_charlaIdEntity(TagEntity tag_charlaIdEntity) {
        this.tag_charlaIdEntity = tag_charlaIdEntity;
    }

}
